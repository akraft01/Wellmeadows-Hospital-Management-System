CREATE TABLE IF NOT EXISTS user_accounts (
    id uuid not null,
    employee_number int not null,
    first_name varchar(255) not null,
    last_name varchar(255) not null,
    email varchar(255) not null,
    role varchar(255) not null,
    primary key (id)
);

CREATE TABLE IF NOT EXISTS users (
    id integer generated by default as identity,
    enabled boolean not null,
    password varchar(120),
    role varchar(255),
    username varchar(20),
    primary key (id)
);

CREATE TABLE IF NOT EXISTS allowed_users (
    id uuid not null,
    role varchar(255) not null,
    employee_number int not null,
    primary key (id)
    );

CREATE TABLE IF NOT EXISTS patients (
    id uuid not null,
    sin_number int not null,
    first_name varchar(255) not null,
    last_name varchar(255) not null,
    address varchar(255) not null,
    phone_number varchar(255) not null,
    date_of_birth timestamp not null,
    gender varchar(255) not null,
    marital_status varchar(255) not null,
    doctor varchar(255) not null,
    next_to_kin_full_name varchar(255) not null,
    next_to_kin_phone_number varchar(255) not null,
    next_to_kin_address varchar(255) not null,
    next_to_kin_relationship_to_patient varchar(255) not null,
    primary key (id)
);

CREATE TABLE IF NOT EXISTS prescriptions (
    id uuid not null,
    drug_number varchar(255) not null,
    drug_name varchar(255) not null,
    units_per_day int not null,
    number_of_administration_per_day varchar(255) not null,
    method_of_administration varchar(255) not null,
    start_date timestamp not null,
    end_date timestamp not null,
    primary key (id)
);

CREATE TABLE IF NOT EXISTS administration_times (
    id uuid not null,
    prescription_id uuid not null,
    units int not null,
    time_of_day timestamp not null,
    primary key (id)
);

CREATE TABLE IF NOT EXISTS divisions (
    id uuid not null,
    division_identifier varchar(255) not null,
    division_name varchar(255) not null,
    location varchar(255) not null,
    total_beds int not null,
    phone_extension_number int not null,
    is_complete boolean not null,
    primary key (id)
);

CREATE TABLE IF NOT EXISTS beds (
    id uuid not null,
    division_id uuid not null,
    bed_number int not null,
    is_occupied boolean not null,
    primary key (id)
);

CREATE TABLE IF NOT EXISTS charge_nurses (
    id uuid not null,
    division_id uuid not null,
    name varchar(255) not null,
    employee_number int not null,
    telephone_extension int not null,
    beeper_extension int not null,
    primary key (id)
);

CREATE TABLE IF NOT EXISTS division_patients (
    id uuid not null,
    division_id uuid not null,
    patient_id uuid not null,
    room_number int not null,
    bed_number int not null,
    private_insurance_number int not null,
    primary key (id)
);

CREATE TABLE IF NOT EXISTS admission_requests (
    id uuid not null,
    division_id uuid not null,
    rational_for_request varchar(255) not null,
    priority_assessment int not null,
    local_doctor varchar(255) not null,
    primary key (id)
);

CREATE TABLE IF NOT EXISTS rooms (
    id uuid not null,
    division_id uuid not null,
    location varchar(255) not null,
    number_of_beds int not null,
    primary key (id)
);

CREATE TABLE IF NOT EXISTS divisions_rooms (
    division_id uuid not null,
    rooms uuid
);

alter table if exists divisions_rooms
    drop constraint if exists DivisionRoomsKey;

alter table if exists divisions_rooms
    add constraint DivisionRoomsKey
    foreign key (division_id)
    references divisions;

CREATE TABLE IF NOT EXISTS divisions_patients (
    division_id uuid not null,
    patients uuid
);

alter table if exists divisions_patients
drop constraint if exists DivisionPatientsKey;

alter table if exists divisions_patients
    add constraint DivisionPatientsKey
    foreign key (division_id)
    references divisions;

CREATE TABLE IF NOT EXISTS divisions_patient_admission_requests (
    division_id uuid not null,
    patient_admission_requests uuid
);

alter table if exists divisions_patient_admission_requests
drop constraint if exists DivisionPatientAdmissionRequestsKey;

alter table if exists divisions_patient_admission_requests
    add constraint DivisionPatientAdmissionRequestsKey
    foreign key (division_id)
    references divisions;

CREATE TABLE IF NOT EXISTS rooms_beds (
    room_id uuid not null,
    patient_admission_requests uuid
);

alter table if exists rooms_beds
drop constraint if exists RoomBedsKey;

alter table if exists rooms_beds
    add constraint RoomBedsKey
    foreign key (room_id)
    references rooms;

CREATE TABLE IF NOT EXISTS prescriptions_administration_times (
    prescription_id uuid not null,
    administration_times uuid
);

alter table if exists prescriptions_administration_times
drop constraint if exists PrescriptionAdministrationTimesKey;

alter table if exists prescriptions_administration_times
    add constraint PrescriptionAdministrationTimesKey
    foreign key (prescription_id)
    references prescriptions;

CREATE TABLE IF NOT EXISTS patient_prescriptions (
    patient_id uuid not null,
    prescriptions uuid
);

alter table if exists patient_prescriptions
drop constraint if exists PatientPrescriptionKey;

alter table if exists patient_prescriptions
    add constraint PatientPrescriptionKey
    foreign key (patient_id)
    references patients;

CREATE TABLE IF NOT EXISTS patient_admission_requests (
                                                     patient_id uuid not null,
                                                     patient_admission_requests uuid
);

alter table if exists patient_admission_requests
drop constraint if exists PatientAdmissionRequestKey;

alter table if exists patient_admission_requests
    add constraint PatientAdmissionRequestKey
    foreign key (patient_id)
    references patients;

insert into allowed_users(id, employee_number, role)
values ('453f852e-77b7-41b1-9c48-1f1b73c3a302', 1, '0'),
       ('af03804c-5cbd-491a-ac27-f5e7aaa093bc', 11, '0'),
       ('da1e2ce4-b5e3-4d6c-9f02-b1856062e7ac', 111, '0'),
       ('22f9b236-7347-4645-a6e7-5ca86168ff02', 2, '1'),
       ('14f2fa60-7fbd-45fc-8b40-550502338d7d', 3, '2'),
       ('f0159a4e-6d40-45c9-a76b-152afbc9df84', 4, '3')
    ON CONFLICT (id) DO NOTHING;

insert into divisions(id, division_identifier, division_name, location, total_beds, phone_extension_number, is_complete)
values ('4c9aad4d-3ec5-432a-bb4a-861bc89c66ae', 'DIV-1', 'Division 1', 'Central Wing', 100, 1234, false),
('124fdf1e-5a3a-40ff-9d01-498e8d494ccf', 'DIV-2', 'Division 2', 'Left Wing', 50, 5678, true),
('572c8ff7-4bd1-4cbd-9f6d-77fcaff36f17', 'DIV-3', 'Division 3', 'Right Wing', 75, 9012, false)
    ON CONFLICT (id) DO NOTHING;

INSERT INTO charge_nurses(id, division_id, name, employee_number, telephone_extension, beeper_extension)
VALUES
    ('f6878dd1-095c-45ab-9485-d88d99697fd8', '4c9aad4d-3ec5-432a-bb4a-861bc89c66ae', 'Nurse', 1, 1234, 5678),
    ('0f234a52-b6b4-4732-b98c-659208d56763', '124fdf1e-5a3a-40ff-9d01-498e8d494ccf', 'Nurse', 11, 2352, 3333),
    ('9e2d92f7-e889-4c59-b779-e9b503377d33', '572c8ff7-4bd1-4cbd-9f6d-77fcaff36f17', 'Nurse', 111, 5323, 7543)
ON CONFLICT (id) DO UPDATE SET
                               division_id = EXCLUDED.division_id,
                               name = EXCLUDED.name,
                               employee_number = EXCLUDED.employee_number,
                               telephone_extension = EXCLUDED.telephone_extension,
                               beeper_extension = EXCLUDED.beeper_extension;

